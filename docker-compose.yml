version: '3'
services:
  pgsql:
    image: 'postgres:16'
    ports:
      - '${DATABASE_PORT:-5432}:5432'
    environment:
      PGPASSWORD: '${DATABASE_PASSWORD:-secret}'
      POSTGRES_DB: '${DATABASE_NAME}'
      POSTGRES_USER: '${DATABASE_USERNAME}'
      POSTGRES_PASSWORD: '${DATABASE_PASSWORD:-secret}'
    volumes:
      - 'isomera-pgsql:/var/lib/postgresql/data'
      - './dumps:/dumps'
    networks:
      - isomera
    healthcheck:
      test:
        [
          'CMD',
          'pg_isready',
          '-q',
          '-d',
          '${DATABASE_NAME}',
          '-U',
          '${DATABASE_USERNAME}'
        ]
      retries: 3
      timeout: 5s
    restart: always

  redis:
    image: 'redis:alpine'
    ports:
      - '6379'
    volumes:
      - 'isomera-redis:/data'
    command:
      redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
      --replica-read-only no
    networks:
      - isomera
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      retries: 3
      timeout: 5s
    restart: always

  mailhog:
    image: 'mailhog/mailhog:latest'
    entrypoint: MailHog -auth-file=/data/mailhog/auth.file
    ports:
      - '${FORWARD_MAILHOG_PORT:-1025}:1025'
      - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
    networks:
      - isomera
    volumes:
      - ./docker/configs/mailhog:/data/mailhog
    restart: always

  minio:
    image: 'minio/minio:latest'
    ports:
      - '9000:9000'
      - '8900:8900'
    environment:
      MINIO_ROOT_USER: 'app'
      MINIO_ROOT_PASSWORD: 'JP9Ydnu4'
    networks:
      - isomera
    volumes:
      - 'isomera-minio:/data/minio'
    command: minio server /data/minio --console-address ":8900"
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      retries: 3
      timeout: 5s
    restart: always

networks:
  isomera:
    driver: bridge
volumes:
  isomera-pgsql:
    driver: local
  isomera-redis:
    driver: local
  isomera-minio:
    driver: local
